{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedBackOptions/FeedBackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/FeedBackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["module","exports","Section","title","children","FeedbackOptions","options","onLeaveFeedback","className","s","box","map","option","button","name","key","onClick","Statistics","good","neutral","bad","total","positivePercentage","list","listItem","Notification","App","useState","setGood","setNeutral","setBad","setTotal","positive","setPositive","useEffect","Math","round","e","target","prevState","ReactDOM","render","document","querySelector"],"mappings":"0IACAA,EAAOC,QAAU,CAAC,KAAO,2B,iBCAzBD,EAAOC,QAAU,CAAC,IAAM,6BAA6B,OAAS,kC,kBCA9DD,EAAOC,QAAU,CAAC,MAAQ,8B,oHCgBXC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,iCACE,4BAAKD,GACJC,I,gBCsBQC,EAxBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,yBAAKC,UAAWC,IAAEC,KACfJ,EAAQK,KAAI,SAACC,GACZ,OACE,4BACEJ,UAAWC,IAAEI,OACbC,KAAMF,EACNG,IAAKH,EACLI,QAAST,GAERK,Q,gBCaEK,EAxBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,6BACE,wBAAId,UAAWC,IAAEc,MACf,wBAAIf,UAAWC,IAAEe,UAAjB,UAAmCN,GACnC,wBAAIV,UAAWC,IAAEe,UAAjB,aAAsCL,GACtC,wBAAIX,UAAWC,IAAEe,UAAjB,SAAkCJ,EAAlC,KACA,wBAAIZ,UAAWC,IAAEe,UAAjB,WAAoCH,GACpC,wBACEb,UAAWC,IAAEe,UADf,6BAEwBF,EAFxB,S,gBCFOG,EANM,SAAC,GAAD,IAAGtB,EAAH,EAAGA,MAAH,OAAe,wBAAIK,UAAWC,IAAEN,OAAQA,ICE9C,SAASuB,IAAO,IAAD,EACJC,mBAAS,GADL,mBACrBT,EADqB,KACfU,EADe,OAEED,mBAAS,GAFX,mBAErBR,EAFqB,KAEZU,EAFY,OAGNF,mBAAS,GAHH,mBAGrBP,EAHqB,KAGhBU,EAHgB,OAIFH,mBAAS,GAJP,mBAIrBN,EAJqB,KAIdU,EAJc,OAKIJ,mBAAS,GALb,mBAKrBK,EALqB,KAKXC,EALW,KAmC5B,OAJAC,qBAAU,WACRD,EAAYE,KAAKC,MAAOlB,EAAOG,EAAS,QACvC,CAACH,EAAMG,IAGR,oCACE,kBAAC,EAAD,CAASlB,MAAM,yBACb,kBAAC,EAAD,CAAiBG,QA/BV,CAAC,OAAQ,UAAW,OA+BKC,gBA7BpB,SAAC8B,GACjB,OAAQA,EAAEC,OAAOxB,MACf,IAAK,OACHc,GAAQ,SAACW,GAAD,OAAeA,EAAY,KACnCR,GAAS,SAACQ,GAAD,OAAeA,EAAY,KACpC,MAEF,IAAK,UACHV,GAAW,SAACU,GAAD,OAAeA,EAAY,KACtCR,GAAS,SAACQ,GAAD,OAAeA,EAAY,KACpC,MAEF,IAAK,MACHT,GAAO,SAACS,GAAD,OAAeA,EAAY,KAClCR,GAAS,SAACQ,GAAD,OAAeA,EAAY,KACpC,MAEF,QACE,YAcF,kBAAC,EAAD,CAASpC,MAAM,cACZkB,EACC,kBAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBU,IAGtB,kBAAC,EAAD,CAAc7B,MAAO,wBCrD/BqC,IAASC,OAAO,kBAACf,EAAD,MAASgB,SAASC,cAAc,Y","file":"static/js/main.29c1a76d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__1lO-E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"FeedBackOptions_box__3zZK7\",\"button\":\"FeedBackOptions_button__36_vR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__2x_Zf\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./FeedBackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div className={s.box}>\r\n      {options.map((option) => {\r\n        return (\r\n          <button\r\n            className={s.button}\r\n            name={option}\r\n            key={option}\r\n            onClick={onLeaveFeedback}\r\n          >\r\n            {option}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./Statistics.module.css\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div>\r\n      <ul className={s.list}>\r\n        <li className={s.listItem}> Good: {good}</li>\r\n        <li className={s.listItem}> Neutral: {neutral}</li>\r\n        <li className={s.listItem}> Bad: {bad} </li>\r\n        <li className={s.listItem}> Total: {total}</li>\r\n        <li\r\n          className={s.listItem}\r\n        >{`Positive feedback: ${positivePercentage}%`}</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./Notification.module.css\";\r\n\r\nconst Notification = ({ title }) => <h2 className={s.title}>{title}</h2>;\r\n\r\nNotification.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Section from \"./Section/Section\";\r\nimport FeedbackOptions from \"./FeedBackOptions/FeedbackOptions\";\r\nimport Statistics from \"./Statistics/Statistics\";\r\nimport Notification from \"./Notification/Notification\";\r\n\r\nexport default function App() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n  const [total, setTotal] = useState(0);\r\n  const [positive, setPositive] = useState(0);\r\n\r\n  const keys = [\"good\", \"neutral\", \"bad\"];\r\n\r\n  const increment = (e) => {\r\n    switch (e.target.name) {\r\n      case \"good\":\r\n        setGood((prevState) => prevState + 1);\r\n        setTotal((prevState) => prevState + 1);\r\n        break;\r\n\r\n      case \"neutral\":\r\n        setNeutral((prevState) => prevState + 1);\r\n        setTotal((prevState) => prevState + 1);\r\n        break;\r\n\r\n      case \"bad\":\r\n        setBad((prevState) => prevState + 1);\r\n        setTotal((prevState) => prevState + 1);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setPositive(Math.round((good / total) * 100));\r\n  }, [good, total]);\r\n\r\n  return (\r\n    <>\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions options={keys} onLeaveFeedback={increment} />\r\n      </Section>\r\n\r\n      <Section title=\"Statistics\">\r\n        {total ? (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={total}\r\n            positivePercentage={positive}\r\n          />\r\n        ) : (\r\n          <Notification title={\"No feedback given\"} />\r\n        )}\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n\r\n// class oldApp extends Component {\r\n//   state = {\r\n//     good: 0,\r\n//     neutral: 0,\r\n//     bad: 0,\r\n//   };\r\n\r\n//   countTotalFeedback = () => {\r\n//     const total = (acc, value) => acc + value;\r\n//     return Object.values(this.state).reduce(total);\r\n//   };\r\n\r\n//   countPositiveFeedbackPercentage = () => {\r\n//     const total = this.countTotalFeedback();\r\n//     const { good } = this.state;\r\n\r\n//     return Math.round((good / total) * 100);\r\n//   };\r\n\r\n//   increment = (e) => {\r\n//     const key = e.target.name;\r\n//     this.setState((prevState) => ({ [key]: prevState[key] + 1 }));\r\n//   };\r\n\r\n//   render() {\r\n//     const keys = Object.keys(this.state);\r\n//     const total = this.countTotalFeedback();\r\n//     const { good, neutral, bad } = this.state;\r\n\r\n//     return (\r\n//       <>\r\n//         <Section title=\"Please leave feedback\">\r\n//           <FeedbackOptions options={keys} onLeaveFeedback={this.increment} />\r\n//         </Section>\r\n\r\n//         <Section title=\"Statistics\">\r\n//           {total ? (\r\n//             <Statistics\r\n//               good={good}\r\n//               neutral={neutral}\r\n//               bad={bad}\r\n//               total={total}\r\n//               positivePercentage={this.countPositiveFeedbackPercentage()}\r\n//             />\r\n//           ) : (\r\n//             <Notification title={\"No feedback given\"} />\r\n//           )}\r\n//         </Section>\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}